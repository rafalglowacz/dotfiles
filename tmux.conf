###########
# Options #
###########

# set-option -sa terminal-overrides ",xterm*:Tc"
source-file "${HOME}/Documents/tmux-gruvbox/tmux-gruvbox-light.conf"

set -g history-limit 10000
set -g display-time 1500
set -g mouse on
set -g escape-time 0
set -g mode-keys vi
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g set-titles on
set -g pane-border-style 'fg=#ffffff,bg=#ffffff'
set -g pane-active-border-style 'fg=#ffffff,bg=#ffffff'
set -g window-style 'bg=#f5f5f5'
set -g window-active-style 'bg=#ffffff' # bg=terminal can be used for transparent background

# Not the correct terminal? https://github.com/tmux/tmux/issues/97 (seems fine with disabled clipboard (below))
set -g default-terminal xterm-256color
set -g set-clipboard off

################
# Key bindings #
################

# Base
set -g prefix C-Space
unbind r
bind r source-file ~/.tmux.conf\; display-message "Tmux config reloaded!"

# Copying
# bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# bind -T copy-mode-vi Y send -X copy-pipe "xclip -in -selection clipboard"
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "wl-copy"
bind -T copy-mode-vi Y send -X copy-pipe "wl-copy"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
unbind -T copy-mode-vi MouseDragEnd1Pane

# Windows
bind -n C-PageUp previous-window
bind -n C-PageDown next-window

bind-key -n M-S-PageUp run-shell 'if tmux list-windows | head -n 1 | grep -q active; then tmux move-window -t 999\; move-window -r\; refresh-client -S; else tmux swap-window -t -1; tmux previous-window; fi'
bind-key -n M-S-PageDown run-shell 'if tmux list-windows | tail -n 1 | grep -q active; then tmux move-window -t 0\; move-window -r\; refresh-client -S; else tmux swap-window -t +1; tmux next-window; fi'

bind c new-window -c "~"

## Clear the name when renaming
bind , command-prompt -I "" { rename-window "%%" }

# Panes
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -r Left  if-shell "$is_vim" "send Escape C-h" "select-pane -L"
bind -r Down  if-shell "$is_vim" "send Escape C-j" "select-pane -D"
bind -r Up    if-shell "$is_vim" "send Escape C-k" "select-pane -U"
bind -r Right if-shell "$is_vim" "send Escape C-l" "select-pane -R"

bind "'" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind "%" split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Sessions

## Clear the name when renaming
bind $ command-prompt -I "" { rename-session "%%" }

# Search
bind-key -T copy-mode-vi ? command-prompt -T search -p "(search down)" { send -X search-forward "%%" }
bind-key -T copy-mode-vi / command-prompt -T search -p "(search up)" { send -X search-backward "%%" }

# Misc
bind -n Home send Escape "OH"
bind -n End send Escape "OF"
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End send -X end-of-line
bind -n C-S-l send C-l Enter

###############
# Status line #
###############

set-option -g status-right "#[bg=colour252,fg=colour237,nobold,noitalics,nounderscore]î‚²#[bg=colour237,fg=colour255] #{pane_current_path} "

